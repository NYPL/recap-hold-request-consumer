name: Test and Deploy
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
      - name: Install gems
        run: |
          bundle install
          bundle install --deployment
      - run:
          bundle exec rspec -fd

  deploy-lambda-qa:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: test
    if: github.ref == 'refs/heads/qa'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::946183545209:role/GithubActionsDeployerRole
          aws-region: us-east-1
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
      - name: Install gems
        run: |
          bundle install
      - uses: hashicorp/setup-terraform@v2
      - name: Initialize Terraform
        run: |
          terraform -chdir=provisioning/qa init -input=false

      - name: Check and Import Existing Lambda
        run: |
          LAMBDA_EXISTS=$(aws lambda get-function --function-name RecapHoldRequestConsumer-qa 2>&1 || true)
          if echo "$LAMBDA_EXISTS" | grep "Lambda not found"; then
            echo "Lambda does not exist, proceeding with creation"
          else
            echo "Lambda exists, importing into Terraform state"
            terraform -chdir=provisioning/qa import aws_lambda_function.lambda_instance arn:aws:lambda:us-east-1:946183545209:function:RecapHoldRequestConsumer-qa
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'us-east-1'

      - name: Deploy app to QA
        run: |
          terraform -chdir=provisioning/qa apply -auto-approve -input=false

  deploy-lambda-production:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: test
    if: github.ref == 'refs/heads/production'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::946183545209:role/GithubActionsDeployerRole
          aws-region: us-east-1
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
      - name: Install gems
        run: |
          bundle install
      - uses: hashicorp/setup-terraform@v2
      - name: Deploy app to QA
        run: |
          terraform -chdir=provisioning/production init -input=false
          terraform -chdir=provisioning/production apply -auto-approve -input=false
